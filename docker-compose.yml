version: "3.8"
services:
  auth-server:
    image: zhoozhoo/spring-cloud-auth-server:0.2.0-SNAPSHOT
    container_name: auth-server
    ports:
      - 8180:8080
    networks:
      - spring-cloud-network

  config-server:
    image: zhoozhoo/spring-cloud-config-server:0.2.0-SNAPSHOT
    container_name: config-server
    ports:
      - 8888:8888
    networks:
      - spring-cloud-network

  discovery-server:
    image: zhoozhoo/spring-cloud-discovery-server:0.2.0-SNAPSHOT
    container_name: discovery-server
    depends_on:
      - config-server
    entrypoint:
      [
        "./dockerize",
        "-wait=tcp://config-server:8888",
        "-timeout=120s",
        "--",
        "java",
        "org.springframework.boot.loader.JarLauncher",
      ]
    ports:
      - 8761:8761
    networks:
      - spring-cloud-network

  guest-service:
    image: zhoozhoo/spring-cloud-guest-service:0.2.0-SNAPSHOT
    container_name: guest-service
    depends_on:
      - config-server
      - discovery-server
      - auth-server
    entrypoint:
      [
        "./dockerize",
        "-wait=tcp://config-server:8888",
        "-wait=tcp://discovery-server:8761",
        "-wait=tcp://host.docker.internal:8180",
        "-timeout=120s",
        "--",
        "java",
        "org.springframework.boot.loader.JarLauncher",
      ]
    ports:
      - 8800:8800
    networks:
      - spring-cloud-network

  reservation-service:
    image: zhoozhoo/spring-cloud-reservation-service:0.2.0-SNAPSHOT
    container_name: reservation-service
    depends_on:
      - config-server
      - discovery-server
      - auth-server
    entrypoint:
      [
        "./dockerize",
        "-wait=tcp://config-server:8888",
        "-wait=tcp://discovery-server:8761",
        "-wait=tcp://host.docker.internal:8180",
        "-timeout=120s",
        "--",
        "java",
        "org.springframework.boot.loader.JarLauncher",
      ]
    ports:
      - 8801:8801
    networks:
      - spring-cloud-network

  room-service:
    image: zhoozhoo/spring-cloud-room-service:0.2.0-SNAPSHOT
    container_name: room-service
    depends_on:
      - config-server
      - discovery-server
      - auth-server
    entrypoint:
      [
        "./dockerize",
        "-wait=tcp://config-server:8888",
        "-wait=tcp://discovery-server:8761",
        "-wait=tcp://host.docker.internal:8180",
        "-timeout=120s",
        "--",
        "java",
        "org.springframework.boot.loader.JarLauncher",
      ]
    ports:
      - 8802:8802
    networks:
      - spring-cloud-network

  room-reservation-service:
    image: zhoozhoo/spring-cloud-room-reservation-service:0.2.0-SNAPSHOT
    container_name: room-reservation-service
    depends_on:
      - config-server
      - discovery-server
      - auth-server
      - guest-service
      - reservation-service
      - room-service
    entrypoint:
      [
        "./dockerize",
        "-wait=tcp://config-server:8888",
        "-wait=tcp://discovery-server:8761",
        "-wait=tcp://host.docker.internal:8180",
        "-timeout=120s",
        "--",
        "java",
        "org.springframework.boot.loader.JarLauncher",
      ]
    ports:
      - 8803:8803
    networks:
      - spring-cloud-network

  api-gateway:
    image: zhoozhoo/spring-cloud-api-gateway:0.2.0-SNAPSHOT
    container_name: api-gateway
    depends_on:
      - config-server
      - discovery-server
      - auth-server
    entrypoint:
      [
        "./dockerize",
        "-wait=tcp://config-server:8888",
        "-wait=tcp://discovery-server:8761",
        "-wait=tcp://host.docker.internal:8180",
        "-timeout=120s",
        "--",
        "java",
        "org.springframework.boot.loader.JarLauncher",
      ]
    ports:
      - 8080:8080
    networks:
      - spring-cloud-network

  tracing-server:
    image: openzipkin/zipkin
    container_name: tracing-server
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
    - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
    ports:
     - 9411:9411
     
  admin-server:
    image: zhoozhoo/spring-cloud-admin-server:0.2.0-SNAPSHOT
    container_name: admin-server
    depends_on:
      - config-server
      - discovery-server
    entrypoint:
      [
        "./dockerize",
        "-wait=tcp://config-server:8888",
        "-wait=tcp://discovery-server:8761",
        "-timeout=120s",
        "--",
        "java",
        "org.springframework.boot.loader.JarLauncher",
      ]
    ports:
      - 9090:8080
    networks:
      - spring-cloud-network

networks:
    spring-cloud-network:
        driver: bridge